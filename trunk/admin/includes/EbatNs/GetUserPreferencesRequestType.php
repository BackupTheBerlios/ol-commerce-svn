<?php
// autogenerated file 17.11.2006 13:29
// $Id: GetUserPreferencesRequestType.php,v 1.1.1.1 2006/12/22 14:38:10 gswkaiser Exp $
// $Log: GetUserPreferencesRequestType.php,v $
// Revision 1.1.1.1  2006/12/22 14:38:10  gswkaiser
// no message
//
//
require_once 'AbstractRequestType.php';

class GetUserPreferencesRequestType extends AbstractRequestType
{
	// start props
	// @var boolean $ShowBidderNoticePreferences
	var $ShowBidderNoticePreferences;
	// @var boolean $ShowCombinedPaymentPreferences
	var $ShowCombinedPaymentPreferences;
	// @var boolean $ShowCrossPromotionPreferences
	var $ShowCrossPromotionPreferences;
	// @var boolean $ShowSellerPaymentPreferences
	var $ShowSellerPaymentPreferences;
	// @var boolean $ShowEndOfAuctionEmailPreferences
	var $ShowEndOfAuctionEmailPreferences;
	// @var boolean $ShowSellerFavoriteItemPreferences
	var $ShowSellerFavoriteItemPreferences;
	// @var boolean $ShoweBxOptInPreference
	var $ShoweBxOptInPreference;
	// @var boolean $ShowProStoresPreferences
	var $ShowProStoresPreferences;
	// end props

/**
 *

 * @return boolean
 */
	function getShowBidderNoticePreferences()
	{
		return $this->ShowBidderNoticePreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowBidderNoticePreferences($value)
	{
		$this->ShowBidderNoticePreferences = $value;
	}
/**
 *

 * @return boolean
 */
	function getShowCombinedPaymentPreferences()
	{
		return $this->ShowCombinedPaymentPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowCombinedPaymentPreferences($value)
	{
		$this->ShowCombinedPaymentPreferences = $value;
	}
/**
 *

 * @return boolean
 */
	function getShowCrossPromotionPreferences()
	{
		return $this->ShowCrossPromotionPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowCrossPromotionPreferences($value)
	{
		$this->ShowCrossPromotionPreferences = $value;
	}
/**
 *

 * @return boolean
 */
	function getShowSellerPaymentPreferences()
	{
		return $this->ShowSellerPaymentPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowSellerPaymentPreferences($value)
	{
		$this->ShowSellerPaymentPreferences = $value;
	}
/**
 *

 * @return boolean
 */
	function getShowEndOfAuctionEmailPreferences()
	{
		return $this->ShowEndOfAuctionEmailPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowEndOfAuctionEmailPreferences($value)
	{
		$this->ShowEndOfAuctionEmailPreferences = $value;
	}
/**
 *

 * @return boolean
 */
	function getShowSellerFavoriteItemPreferences()
	{
		return $this->ShowSellerFavoriteItemPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowSellerFavoriteItemPreferences($value)
	{
		$this->ShowSellerFavoriteItemPreferences = $value;
	}
/**
 *

 * @return boolean
 */
	function getShoweBxOptInPreference()
	{
		return $this->ShoweBxOptInPreference;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShoweBxOptInPreference($value)
	{
		$this->ShoweBxOptInPreference = $value;
	}
/**
 *

 * @return boolean
 */
	function getShowProStoresPreferences()
	{
		return $this->ShowProStoresPreferences;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setShowProStoresPreferences($value)
	{
		$this->ShowProStoresPreferences = $value;
	}
/**
 *

 * @return 
 */
	function GetUserPreferencesRequestType()
	{
		$this->AbstractRequestType('GetUserPreferencesRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ShowBidderNoticePreferences' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ShowCombinedPaymentPreferences' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ShowCrossPromotionPreferences' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ShowSellerPaymentPreferences' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				),
				'ShowEndOfAuctionEmailPreferences' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShowSellerFavoriteItemPreferences' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShoweBxOptInPreference' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShowProStoresPreferences' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
