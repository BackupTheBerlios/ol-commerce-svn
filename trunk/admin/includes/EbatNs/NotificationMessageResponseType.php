<?php
// autogenerated file 20.03.2006 20:59
// $Id: NotificationMessageResponseType.php,v 2.0.0 2006/12/14 05:23:27 gswkaiser Exp $
// $Log: NotificationMessageResponseType.php,v $
// Revision 2.0.0  2006/12/14 05:23:27  gswkaiser
// no message
//
// Revision 1.4  2006/03/20 20:19:41  carsten
// *** empty log message ***
//
//
require_once 'AbstractResponseType.php';

class NotificationMessageResponseType extends AbstractResponseType
{
	// start props
	// @var string $MessageBody
	var $MessageBody;
	// @var string $EIAS
	var $EIAS;
	// end props

/**
 *

 * @return string
 */
	function getMessageBody()
	{
		return $this->MessageBody;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMessageBody($value)
	{
		$this->MessageBody = $value;
	}
/**
 *

 * @return string
 */
	function getEIAS()
	{
		return $this->EIAS;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setEIAS($value)
	{
		$this->EIAS = $value;
	}
/**
 *

 * @return 
 */
	function NotificationMessageResponseType()
	{
		$this->AbstractResponseType('NotificationMessageResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'MessageBody' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EIAS' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
