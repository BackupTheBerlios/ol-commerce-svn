<?php
// autogenerated file 17.11.2006 13:29
// $Id: IssueRefundResponseType.php,v 1.1.1.1 2006/12/22 14:38:12 gswkaiser Exp $
// $Log: IssueRefundResponseType.php,v $
// Revision 1.1.1.1  2006/12/22 14:38:12  gswkaiser
// no message
//
//
require_once 'AbstractResponseType.php';
require_once 'AmountType.php';

class IssueRefundResponseType extends AbstractResponseType
{
	// start props
	// @var AmountType $RefundFromSeller
	var $RefundFromSeller;
	// @var AmountType $TotalRefundToBuyer
	var $TotalRefundToBuyer;
	// end props

/**
 *

 * @return AmountType
 */
	function getRefundFromSeller()
	{
		return $this->RefundFromSeller;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRefundFromSeller($value)
	{
		$this->RefundFromSeller = $value;
	}
/**
 *

 * @return AmountType
 */
	function getTotalRefundToBuyer()
	{
		return $this->TotalRefundToBuyer;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalRefundToBuyer($value)
	{
		$this->TotalRefundToBuyer = $value;
	}
/**
 *

 * @return 
 */
	function IssueRefundResponseType()
	{
		$this->AbstractResponseType('IssueRefundResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'RefundFromSeller' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalRefundToBuyer' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
