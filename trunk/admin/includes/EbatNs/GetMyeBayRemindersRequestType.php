<?php
// autogenerated file 17.11.2006 13:29
// $Id: GetMyeBayRemindersRequestType.php,v 1.1.1.1 2006/12/22 14:37:59 gswkaiser Exp $
// $Log: GetMyeBayRemindersRequestType.php,v $
// Revision 1.1.1.1  2006/12/22 14:37:59  gswkaiser
// no message
//
//
require_once 'ReminderCustomizationType.php';
require_once 'AbstractRequestType.php';

class GetMyeBayRemindersRequestType extends AbstractRequestType
{
	// start props
	// @var ReminderCustomizationType $BuyingReminders
	var $BuyingReminders;
	// @var ReminderCustomizationType $SellingReminders
	var $SellingReminders;
	// end props

/**
 *

 * @return ReminderCustomizationType
 */
	function getBuyingReminders()
	{
		return $this->BuyingReminders;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBuyingReminders($value)
	{
		$this->BuyingReminders = $value;
	}
/**
 *

 * @return ReminderCustomizationType
 */
	function getSellingReminders()
	{
		return $this->SellingReminders;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellingReminders($value)
	{
		$this->SellingReminders = $value;
	}
/**
 *

 * @return 
 */
	function GetMyeBayRemindersRequestType()
	{
		$this->AbstractRequestType('GetMyeBayRemindersRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'BuyingReminders' =>
				array(
					'required' => false,
					'type' => 'ReminderCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellingReminders' =>
				array(
					'required' => false,
					'type' => 'ReminderCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
