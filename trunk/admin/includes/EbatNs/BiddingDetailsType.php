<?php
// autogenerated file 17.11.2006 13:29
// $Id: BiddingDetailsType.php,v 1.1.1.1 2006/12/22 14:37:20 gswkaiser Exp $
// $Log: BiddingDetailsType.php,v $
// Revision 1.1.1.1  2006/12/22 14:37:20  gswkaiser
// no message
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'AmountType.php';

class BiddingDetailsType extends EbatNs_ComplexType
{
	// start props
	// @var AmountType $ConvertedMaxBid
	var $ConvertedMaxBid;
	// @var AmountType $MaxBid
	var $MaxBid;
	// @var int $QuantityBid
	var $QuantityBid;
	// @var int $QuantityWon
	var $QuantityWon;
	// @var boolean $Winning
	var $Winning;
	// end props

/**
 *

 * @return AmountType
 */
	function getConvertedMaxBid()
	{
		return $this->ConvertedMaxBid;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setConvertedMaxBid($value)
	{
		$this->ConvertedMaxBid = $value;
	}
/**
 *

 * @return AmountType
 */
	function getMaxBid()
	{
		return $this->MaxBid;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxBid($value)
	{
		$this->MaxBid = $value;
	}
/**
 *

 * @return int
 */
	function getQuantityBid()
	{
		return $this->QuantityBid;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantityBid($value)
	{
		$this->QuantityBid = $value;
	}
/**
 *

 * @return int
 */
	function getQuantityWon()
	{
		return $this->QuantityWon;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setQuantityWon($value)
	{
		$this->QuantityWon = $value;
	}
/**
 *

 * @return boolean
 */
	function getWinning()
	{
		return $this->Winning;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setWinning($value)
	{
		$this->Winning = $value;
	}
/**
 *

 * @return 
 */
	function BiddingDetailsType()
	{
		$this->EbatNs_ComplexType('BiddingDetailsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ConvertedMaxBid' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxBid' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantityBid' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantityWon' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Winning' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
