<?php
// autogenerated file 17.11.2006 13:29
// $Id: ContextSearchAssetType.php,v 1.1.1.1 2006/12/22 14:37:25 gswkaiser Exp $
// $Log: ContextSearchAssetType.php,v $
// Revision 1.1.1.1  2006/12/22 14:37:25  gswkaiser
// no message
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'CategoryType.php';

class ContextSearchAssetType extends EbatNs_ComplexType
{
	// start props
	// @var string $Keyword
	var $Keyword;
	// @var CategoryType $Category
	var $Category;
	// @var int $Ranking
	var $Ranking;
	// end props

/**
 *

 * @return string
 */
	function getKeyword()
	{
		return $this->Keyword;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setKeyword($value)
	{
		$this->Keyword = $value;
	}
/**
 *

 * @return CategoryType
 */
	function getCategory()
	{
		return $this->Category;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setCategory($value)
	{
		$this->Category = $value;
	}
/**
 *

 * @return int
 */
	function getRanking()
	{
		return $this->Ranking;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setRanking($value)
	{
		$this->Ranking = $value;
	}
/**
 *

 * @return 
 */
	function ContextSearchAssetType()
	{
		$this->EbatNs_ComplexType('ContextSearchAssetType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Keyword' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Category' =>
				array(
					'required' => false,
					'type' => 'CategoryType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Ranking' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
