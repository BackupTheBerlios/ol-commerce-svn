<?php
// autogenerated file 17.11.2006 13:29
// $Id: GetMyeBaySellingResponseType.php,v 1.1.1.1 2006/12/22 14:38:00 gswkaiser Exp $
// $Log: GetMyeBaySellingResponseType.php,v $
// Revision 1.1.1.1  2006/12/22 14:38:00  gswkaiser
// no message
//
//
require_once 'PaginatedOrderTransactionArrayType.php';
require_once 'SellingSummaryType.php';
require_once 'AbstractResponseType.php';
require_once 'PaginatedItemArrayType.php';

class GetMyeBaySellingResponseType extends AbstractResponseType
{
	// start props
	// @var SellingSummaryType $SellingSummary
	var $SellingSummary;
	// @var PaginatedItemArrayType $ScheduledList
	var $ScheduledList;
	// @var PaginatedItemArrayType $ActiveList
	var $ActiveList;
	// @var PaginatedOrderTransactionArrayType $SoldList
	var $SoldList;
	// @var PaginatedItemArrayType $UnsoldList
	var $UnsoldList;
	// end props

/**
 *

 * @return SellingSummaryType
 */
	function getSellingSummary()
	{
		return $this->SellingSummary;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSellingSummary($value)
	{
		$this->SellingSummary = $value;
	}
/**
 *

 * @return PaginatedItemArrayType
 */
	function getScheduledList()
	{
		return $this->ScheduledList;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setScheduledList($value)
	{
		$this->ScheduledList = $value;
	}
/**
 *

 * @return PaginatedItemArrayType
 */
	function getActiveList()
	{
		return $this->ActiveList;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setActiveList($value)
	{
		$this->ActiveList = $value;
	}
/**
 *

 * @return PaginatedOrderTransactionArrayType
 */
	function getSoldList()
	{
		return $this->SoldList;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setSoldList($value)
	{
		$this->SoldList = $value;
	}
/**
 *

 * @return PaginatedItemArrayType
 */
	function getUnsoldList()
	{
		return $this->UnsoldList;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setUnsoldList($value)
	{
		$this->UnsoldList = $value;
	}
/**
 *

 * @return 
 */
	function GetMyeBaySellingResponseType()
	{
		$this->AbstractResponseType('GetMyeBaySellingResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'SellingSummary' =>
				array(
					'required' => false,
					'type' => 'SellingSummaryType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ScheduledList' =>
				array(
					'required' => false,
					'type' => 'PaginatedItemArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ActiveList' =>
				array(
					'required' => false,
					'type' => 'PaginatedItemArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SoldList' =>
				array(
					'required' => false,
					'type' => 'PaginatedOrderTransactionArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'UnsoldList' =>
				array(
					'required' => false,
					'type' => 'PaginatedItemArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
