<?php
// autogenerated file 17.11.2006 13:29
// $Id: PlaceOfferRequestType.php,v 1.1.1.1 2006/12/22 14:38:28 gswkaiser Exp $
// $Log: PlaceOfferRequestType.php,v $
// Revision 1.1.1.1  2006/12/22 14:38:28  gswkaiser
// no message
//
//
require_once 'OfferType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

class PlaceOfferRequestType extends AbstractRequestType
{
	// start props
	// @var OfferType $Offer
	var $Offer;
	// @var ItemIDType $ItemID
	var $ItemID;
	// @var boolean $BlockOnWarning
	var $BlockOnWarning;
	// end props

/**
 *

 * @return OfferType
 */
	function getOffer()
	{
		return $this->Offer;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setOffer($value)
	{
		$this->Offer = $value;
	}
/**
 *

 * @return ItemIDType
 */
	function getItemID()
	{
		return $this->ItemID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
/**
 *

 * @return boolean
 */
	function getBlockOnWarning()
	{
		return $this->BlockOnWarning;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBlockOnWarning($value)
	{
		$this->BlockOnWarning = $value;
	}
/**
 *

 * @return 
 */
	function PlaceOfferRequestType()
	{
		$this->AbstractRequestType('PlaceOfferRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Offer' =>
				array(
					'required' => false,
					'type' => 'OfferType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BlockOnWarning' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
